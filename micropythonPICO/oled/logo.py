import framebuf

class Logo():
    def __init__(self):
        ''' contructor 
            https://javl.github.io/image2cpp/ --> convert image into bytearray
            output format: plein bytes - Horizontal - 1 bite per pixel
        '''

        # logo dictionary
        self.__logos = {           
            # 'nom_logo' : { 'size': (width, hight)
            #                 data : [ ... hex code 1 byte = 8 horizontal pixel ... ]
            #              }
            # self.__logos['nom_logo']['size'] retourne la taille sous forme de tuple (width, height)
            # self.__logos['nom_logo']['data'] retourne la liste des code hexa de l'image
            'wifi64':
                {'size': (64,64),
                 'data':[0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 
                0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
                0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x0f, 0xff, 0xf8, 0x1f, 0xff, 0xf0, 0x00, 
                0x00, 0x3f, 0xfe, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x7f, 0xf0, 0x00, 0x00, 0x0f, 0xfe, 0x00, 
                0x01, 0xff, 0x80, 0x00, 0x00, 0x01, 0xff, 0x80, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xc0, 
                0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x0f, 0xf0, 0x00, 0x7f, 0xfe, 0x00, 0x0f, 0xf0, 
                0x0f, 0xe0, 0x03, 0xff, 0xff, 0xc0, 0x07, 0xf0, 0x07, 0xc0, 0x1f, 0xff, 0xff, 0xf8, 0x03, 0xe0, 
                0x03, 0x80, 0x3f, 0xff, 0xff, 0xfc, 0x01, 0xc0, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
                0x00, 0x03, 0xff, 0xe0, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0xff, 0xe0, 0x00, 
                0x00, 0x0f, 0xf8, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x0f, 0xf0, 0x00, 
                0x00, 0x0f, 0xc0, 0x00, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x07, 0x80, 0x03, 0xc0, 0x01, 0xe0, 0x00, 
                0x00, 0x01, 0x00, 0x3f, 0xfc, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 
                0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
                0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x07, 0xf8, 0x00, 0x00, 
                0x00, 0x00, 0x0f, 0x80, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0xe0, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x03, 0xe3, 0xc7, 0xc7, 0xe3, 0xff, 0xe7, 0xe0, 0x03, 0xe3, 0xc7, 0xc7, 0xe3, 0xff, 0xe7, 0xe0, 
                0x03, 0xe7, 0xe7, 0xc7, 0xe7, 0xff, 0xe7, 0xe0, 0x03, 0xe7, 0xe7, 0xc7, 0xe7, 0xff, 0xe7, 0xe0, 
                0x03, 0xff, 0xff, 0xc7, 0xe7, 0xff, 0xe7, 0xe0, 0x03, 0xff, 0xff, 0xc7, 0xe7, 0xe0, 0x07, 0xe0, 
                0x01, 0xff, 0xff, 0x87, 0xe7, 0xe0, 0x07, 0xe0, 0x01, 0xff, 0xff, 0x87, 0xe7, 0xe0, 0x07, 0xe0, 
                0x01, 0xff, 0xff, 0x87, 0xe7, 0xff, 0x07, 0xe0, 0x01, 0xff, 0xff, 0x87, 0xe7, 0xff, 0x07, 0xe0, 
                0x01, 0xfe, 0x7f, 0x87, 0xe7, 0xff, 0x07, 0xe0, 0x00, 0xfe, 0x7f, 0x07, 0xe7, 0xff, 0x07, 0xe0, 
                0x00, 0xfc, 0x3f, 0x07, 0xe7, 0xff, 0x07, 0xe0, 0x00, 0xfc, 0x3f, 0x07, 0xe7, 0xe0, 0x07, 0xe0, 
                0x00, 0xf8, 0x1f, 0x07, 0xe7, 0xe0, 0x07, 0xe0, 0x00, 0x70, 0x0e, 0x07, 0xe7, 0xe0, 0x07, 0xe0]},

            'wifi32':
                {'size': (32,32),
                 'data':[0x00, 0x0f, 0xf0, 0x00, 0x00, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x07, 0xe0, 0x07, 0xe0, 
                0x1f, 0x00, 0x00, 0xf8, 0x3e, 0x03, 0xc0, 0x7c, 0x18, 0x3f, 0xfc, 0x1c, 0x00, 0xff, 0xff, 0x00, 
                0x01, 0xf8, 0x1f, 0x80, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x80, 0x01, 0xc0, 0x00, 0x0f, 0xf0, 0x00, 
                0x00, 0x3f, 0xfc, 0x00, 0x00, 0x3e, 0x7c, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x03, 0xc0, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x07, 0xe0, 0x00, 
                0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x19, 0x99, 0x9f, 0x98, 0x1f, 0xf9, 0x9f, 0x98, 0x1f, 0xf9, 0x9f, 0x98, 0x1f, 0xf9, 0x98, 0x18, 
                0x0f, 0xf1, 0x9f, 0x18, 0x0e, 0x71, 0x9f, 0x18, 0x0e, 0x71, 0x9f, 0x18, 0x0c, 0x31, 0x98, 0x18]},

            'papsdroid':
                {'size': (44,64),
                 'data':[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0x9f, 0x00, 0x00, 0x00, 0x0f, 
                0xcf, 0x9f, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0x9f, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0x9f, 0x00, 0x00, 
                0x00, 0x0f, 0xcf, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 
                0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 
                0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x07, 0xc0, 0x0f, 0x80, 0x3e, 0x00, 0x07, 0xc0, 0x0f, 0x80, 0x3e, 0x00, 0x07, 0xc0, 
                0x0f, 0x80, 0x3e, 0x00, 0x07, 0xc0, 0x0f, 0x80, 0x3e, 0x00, 0x07, 0xc0, 0x0f, 0x80, 0x3e, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 
                0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 
                0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 
                0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 
                0xcf, 0x9f, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x07, 0xc0, 0x00, 0x00, 0x3e, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x3e, 0x00, 0x07, 0xc0, 0x00, 0x00, 
                0x3e, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x3e, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 
                0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 
                0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x07, 0xcf, 0xcf, 0x9f, 0x3e, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0x9f, 0x00, 0x00, 
                0x00, 0x0f, 0xcf, 0x9f, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0x9f, 0x00, 0x00, 0x00, 0x0f, 0xcf, 0x9f, 
                0x00, 0x00, 0x00, 0x0f, 0xcf, 0x9f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]},
            
            'pi': {'size': (16,16),
                   'data':[0x0f, 0xfe, 0x3f, 0xff, 0x7f, 0xff, 0xff, 0xfe, 0x06, 0x70, 0x06, 0x60, 0x06, 0x60, 0x0e, 0x60, 
                    0x0e, 0x60, 0x0e, 0x60, 0x0e, 0x60, 0x1e, 0x71, 0x1e, 0x71, 0x1e, 0x7f, 0x1c, 0x3e, 0x00, 0x08]},
            
            'engine_off':
                { 'size': (32,32),
                  'data': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x01, 0x80, 0x00, 
                0x00, 0x3f, 0xfc, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0xe0, 0x06, 0x00, 0x67, 0xc0, 0x03, 0xf8, 
                0x67, 0x80, 0x03, 0xfc, 0x66, 0x00, 0x00, 0x66, 0x66, 0x00, 0x00, 0x66, 0x66, 0x00, 0x00, 0x66, 
                0x7e, 0x00, 0x00, 0x66, 0x7e, 0x00, 0x00, 0x06, 0x7e, 0x00, 0x00, 0x06, 0x66, 0x00, 0x00, 0x06, 
                0x66, 0x00, 0x00, 0x06, 0x66, 0x00, 0x00, 0x66, 0x67, 0xc0, 0x00, 0x66, 0x23, 0xf0, 0x00, 0x66, 
                0x00, 0x38, 0x00, 0x66, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x0f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]},
            
            'engine_on':
                { 'size': (32,32),
                  'data': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x01, 0x80, 0x00, 
                0x00, 0x3f, 0xfc, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0xe0, 0x06, 0x00, 0x67, 0xc0, 0x03, 0xf8, 
                0x67, 0x80, 0x03, 0xfc, 0x66, 0x00, 0xc0, 0x66, 0x66, 0x01, 0xc0, 0x66, 0x66, 0x03, 0x80, 0x66, 
                0x7e, 0x03, 0xe0, 0x66, 0x7e, 0x07, 0xf0, 0x06, 0x7e, 0x03, 0xe0, 0x06, 0x66, 0x00, 0xe0, 0x06, 
                0x66, 0x01, 0xc0, 0x06, 0x66, 0x01, 0x80, 0x66, 0x67, 0xc0, 0x00, 0x66, 0x23, 0xf0, 0x00, 0x66, 
                0x00, 0x38, 0x00, 0x66, 0x00, 0x1f, 0xff, 0xfc, 0x00, 0x0f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]},
            
            'earth':
                {'size':(30,30),
                 'data': [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0x00, 
                0x00, 0x7f, 0xf8, 0x00, 0x00, 0xf3, 0x3c, 0x00, 0x01, 0xf3, 0x0e, 0x00, 0x03, 0xff, 0x0f, 0x00, 
                0x07, 0xff, 0x3f, 0x80, 0x0f, 0xe6, 0x3f, 0xc0, 0x0f, 0xe0, 0x27, 0xc0, 0x0f, 0xc0, 0x01, 0xc0, 
                0x1f, 0x80, 0x7b, 0xe0, 0x1e, 0x00, 0xff, 0xe0, 0x1c, 0x00, 0xff, 0xe0, 0x1c, 0x00, 0xff, 0xe0, 
                0x1f, 0xc0, 0x7f, 0xe0, 0x1f, 0xe0, 0x7f, 0xe0, 0x0f, 0xf0, 0x0f, 0xc0, 0x0f, 0xf0, 0x07, 0xc0, 
                0x0f, 0xf0, 0x07, 0xc0, 0x07, 0xf0, 0x0f, 0x80, 0x03, 0xf0, 0x0f, 0x00, 0x01, 0xf0, 0x1e, 0x00, 
                0x00, 0xf8, 0x3c, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]},
            }
        
        
    def get_logo(self, name:str) -> framebuf.FrameBuffer:
        ''' return logo by name into a framebuffer to display
        '''
        w,h = self.__logos[name]['size']
        data = bytearray(self.__logos[name]['data'])
        fbuf = framebuf.FrameBuffer(data, w, h, framebuf.MONO_HLSB)
        return fbuf
